# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx10248m -XX:MaxPermSize=256m
# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

android.useAndroidX = true
android.enableJetifier = true

#___________________________________________________________________________
# Below gnupg config is read by useGpgCmd. secret private key is read using
# this config and it doesn't need to be passed explicitly.
# Executable to be used can be gpg or gpg2
signing.gnupg.executable = gpg
signing.gnupg.useLegacyGpg = false
# Generate 4096 bit rsa key-pair with no expiry # gpg --default-new-key-algo rsa4096 --gen-key
# keyName is keyId obtained using # gpg --list-secret-keys --keyid-format=short
signing.gnupg.keyName = F2217B20
signing.gnupg.passphrase = vizdyy
#___________________________________________________________________________

# signing key is needed to be used with useInMemoryPgpKeys
# private signing key - gpg --armor --export-secret-keys F226BAFB > ~/.gnupg/mysecring.gpg
# Putting here sample private key and not real one.
#signing.key='-----BEGIN PGP PRIVATE KEY BLOCK-----\n\n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=vlS9\n-----END PGP PRIVATE KEY BLOCK-----'
